
All properties start with _CMakeJSON_ use 
cmakejson_(set|get)_(global|directory|target)_property

Global:
<DEPENDENCY_NAME>_FOUND
<DEPENDENCY_NAME>_COMPONENTS_FOUND

Directory Properties:
PROJECT_OVERRIDE (INHERITED) # decides wether the PROJECT_OVERRIDE is enabled

CURRENT_PROJECT (INHERITED) # only set if not closed. name of the current project
CURRENT_PROJECT_DIRECTORY (INHERITED) # only set if not closed. name of the current project
PARENT_PROJECT (INHERITED) 
CHILD_PROJECTS (INHERITED)


set if CMakeJSON_CURRENT_PROJECT is set and thus updated. 
It is assumed that the new project is a subproject/subcomponent. 
CMakeJSON will not call project() for a sub project to keep ordering of build targets in IDEs
if a project call is done this means a new toplevel project is opened in IDEs

<PROJECT_NAME>_CONDITION
<PROJECT_NAME>_DIRECTORY # Directory of the 

<PROJECT_NAME>_PACKAGE_NAME 
<PROJECT_NAME>_EXPORT_NAME (not needed?)
<PROJECT_NAME>_EXPORT_NAMESPACE (simplyfy to namespace?); defaults to PACKAGE_NAME
<PROJECT_NAME>_EXPORT_TARGETS
find_package name defaults to PROJECT_NAME if possible

<PROJECT_NAME>_VERSION
<PROJECT_NAME>_VERSION_COMPATIBILITY

<PROJECT_NAME>_OPTIONS
<PROJECT_NAME>_OPTION_<OPTION_NAME>_VARIABLE
<PROJECT_NAME>_OPTION_<OPTION_NAME>_DEFAULT_VALUE
<PROJECT_NAME>_OPTION_<OPTION_NAME>_DESCRIPTION
<PROJECT_NAME>_OPTION_<OPTION_NAME>_CONDITION
<PROJECT_NAME>_OPTION_<OPTION_NAME>_DEPENDENCIES
<PROJECT_NAME>_OPTION_<OPTION_NAME>_DEPENDENCY_[DEPINFO]


<PROJECT_NAME>_CMAKE_CONFIG_INSTALL_DESTINATION
<PROJECT_NAME>_PKGCONFIG_INSTALL_DESTINATION

<PROJECT_NAME>_USAGE_INCLUDE_DIRECTORY
<PROJECT_NAME>_PUBLIC_HEADER_INSTALL_DESTINATION
<PROJECT_NAME>_PUBLIC_CMAKE_MODULE_PATH

<PROJECT_NAME>_DEPENDENCIES # list of current dependencies
<PROJECT_NAME>_DEPENDENCY_<DEPENDENCY_NAME>_[DEPINFO]

[DEPINFO]
<DEPENDENCY_NAME>_PKGCONFIG
<DEPENDENCY_NAME>_DESCRIPTION
<DEPENDENCY_NAME>_COMPONENTS
<DEPENDENCY_NAME>_VERSION
<DEPENDENCY_NAME>_FIND_OPTIONS
<DEPENDENCY_NAME>_FIND_PACKAGE